spring.application.name=tripbooking

spring.datasource.url: jdbc:postgresql://localhost:5432/booktest
spring.datasource.username= postgres
spring.datasource.password= admin


#spring.datasource.url=jdbc:postgresql://dpg-cvt7cp49c44c73cdnrig-a.oregon-postgres.render.com:5432/booking_trips_db_l0aq
#spring.datasource.username=booking_trips_db_l0aq_user
#spring.datasource.password=saYFseSD3k9KYPQrwg2wcA4h8IODePuP
spring.flyway.repair=true

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.open-in-view=true


spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:/db/migration
server.port=8080
logging.level.org.hibernate.SQL=DEBUG
# JWT configuration
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
jwt.expiration=360000000000000
jwt.refresh.token.expiration=31556952000000000

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_CLIENT_SCOPE}



spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

cloudinary.cloud_name=dcgkgye6t
cloudinary.api_key=119533716376161
cloudinary.api_secret=q-HQUEmLbat2-8yHiDLDi4JimGU
